diff --git a/realname.admin.inc b/realname.admin.inc
index 609d69c..e81c059 100644
--- a/realname.admin.inc
+++ b/realname.admin.inc
@@ -214,7 +214,6 @@ function realname_admin_bypass_submit($form, &$form_state) {
 function realname_admin_module($form_state) {
   $form = array();
   // Get the list of modules we support.
-  include_once(drupal_get_path('module', 'realname') .'/realname_supported.inc');
   $supported_modules = realname_supported_modules();
 
   $choices = $show_types = array();
@@ -273,9 +272,13 @@ function realname_admin_module_submit($form, &$form_state) {
 
     $show_types = $form_state['values']['show_types'];
     if ($show_types[$module]) {
-      include_once(drupal_get_path('module', 'realname') .'/realname_'. $module .'.inc');
-      // This module uses types, so let's see what types are allowed.
-      $types = call_user_func('realname_'. $module .'_get_types');
+      $module_info = realname_supported_modules($module);
+      if (isset($module_info['file'])) {
+        $path = !empty($module_info['path']) ? $module_info['path'] : drupal_get_path('module', $module);
+        require_once($path .'/'. $module_info['file']);
+      }
+        // This module uses types, so let's see what types are allowed.
+      $types = (array) module_invoke($module, 'realname_get_types');
       if (count($types) > 1) {
         $form_state['storage']['types'] = $types;
         return;
@@ -296,14 +299,29 @@ function realname_admin_module_submit($form, &$form_state) {
 
 function realname_admin_fields() {
   $form = array();
-  $current = variable_get('realname_fields', array());
   $module = variable_get('realname_profile_module', NULL);
-  $type = variable_get('realname_profile_type', NULL);
   // Do we have a module set yet?
   if (!$module) {
     drupal_goto('admin/user/realname/module');
   }
 
+  $module_info = $module ? realname_supported_modules($module) : NULL;
+  if (isset($module_info['fields']) && !$module_info['fields']) {
+    $form['heading'] = array(
+      '#type' => 'item',
+      '#value' => t("You are using the %module module to provide data and it doesn't utilize fields.", array('%module' => $module)),
+      );
+    return $form;
+  }
+
+  if (isset($module_info['file'])) {
+    $path = !empty($module_info['path']) ? $module_info['path'] : drupal_get_path('module', $module);
+    require_once($path .'/'. $module_info['file']);
+  }
+  $current = variable_get('realname_fields', array());
+  $type = (!isset($module_info['type']) || !$module_info['type']) ? variable_get('realname_profile_type', NULL) : NULL;
+  $profile_fields = (array) module_invoke($module, 'realname_get_fields', $current, $type);
+
   $what = t('You are using the %module module to provide fields.', array('%module' => $module));
   if ($type) {
     $what .= t('The %type type is the source of data.', array('%type' => $type));
@@ -314,8 +332,6 @@ function realname_admin_fields() {
     '#value' => $what,
   );
 
-  include_once(drupal_get_path('module', 'realname') .'/realname_'. $module .'.inc');
-  $profile_fields = call_user_func('realname_'. $module .'_get_fields', $current, $type);
   $fields = $profile_fields['fields'];
   uasort($fields, '_realname_sort');
   $links = $profile_fields['links'];
diff --git a/realname.module b/realname.module
index 726c387..4a70db5 100644
--- a/realname.module
+++ b/realname.module
@@ -407,6 +407,12 @@ function realname_user($op, &$edit, &$account, $category = NULL) {
 
     case 'insert':
     case 'after_update':
+      if ($module = variable_get('realname_profile_module', NULL)) {
+        $module_info = realname_supported_modules($module);
+        if (isset($module_info['cache']) && !$module_info['cache']) {
+          return;
+        }
+      }
       $account->realname = _realname_make_name($account);
       // If we delete it first, then drupal_write_record is always an insert.
       db_query("DELETE FROM {realname} WHERE uid = %d", $account->uid);
@@ -705,6 +711,47 @@ function realname_privatemsg_autocomplete($string) {
 //* Module Functions
 //********************************************************************
 
+function _realname_include() {
+  static $not_run = TRUE;
+
+  if ($not_run) {
+    $path = drupal_get_path('module', 'realname');
+    if (module_exists('content_profile')) {
+      require_once("$path/realname_content_profile.inc");
+    }
+    if (module_exists('profile')) {
+      require_once("$path/realname_profile.inc");
+    }
+    $not_run = TRUE;
+  }
+}
+
+function realname_supported_modules($module = NULL) {
+  static $modules;
+
+  _realname_include();
+
+  if (!isset($modules)) {
+    foreach (module_implements('realname') as $value) {
+      $options = call_user_func($value .'_realname');
+      if (isset($options) && is_array($options)) {
+        $modules[$value] = $options;
+      }
+    }
+  }
+
+  if ($module) {
+    if (array_key_exists($module, $modules)) {
+      return $modules[$module];
+    }
+    else {
+      return FALSE;
+    }
+  }
+
+  return $modules;
+}
+
 /**
  * Retreive calculated user name. Try static cache first, DB next and on failure call
  * helper function to calculate realname and populate DB.
@@ -730,7 +777,13 @@ function realname_make_name(&$account) {
     return $users[$account->uid];
   }
 
+  if ($module = variable_get('realname_profile_module', NULL)) {
+    $module_info = realname_supported_modules($module);
+  }
   $result = _realname_make_name($account);
+  if (isset($module_info['cache']) && !$module_info['cache']) {
+    return $result;
+  }
   if (empty($result)) {
     return $account->name;
   }
@@ -753,37 +806,62 @@ function realname_make_name(&$account) {
  *   The constructed "real name" string.
  */
 function _realname_make_name(&$account) {
-  static $fields, $pattern_saved, $homepage, $use_theme, $type, $module, $profile_privacy;
-  $users = &realname_static('users', array());
+  static $fields, $pattern_saved, $homepage, $use_theme, $type, $module, $module_info, $profile_privacy;
   $links = &realname_static('links', array());
   $edit = &realname_static('edit', array());
 
   // Get our controlling variables (static makes it once per page load).
-  if (!isset($fields)) {
-    $fields = variable_get('realname_fields', array());
-    // Are there any fields assigned yet?
-    if (!$fields) {
-      // No, so just return the name.
-      return $account->name;
-    }
-    $pattern_saved = variable_get('realname_pattern', ' ');
-    $homepage = variable_get('realname_homepage', '');
-    $use_theme = variable_get('realname_theme', TRUE);
+  if (!isset($module)) {
     $module = variable_get('realname_profile_module', NULL);
-    $type = variable_get('realname_profile_type', NULL);
-    $profile_privacy = module_exists('profile_privacy');
-    if ($module && module_exists($module)) {
-      include_once(drupal_get_path('module', 'realname') . '/realname_' . $module . '.inc');
-    }
-    else {
-      drupal_set_message(t('No module is available for RealName.'), 'error');
-      return $account->name;
+    if ($module) {
+      $module_info = realname_supported_modules($module);
+      if (!$module_info || !module_exists($module)) {
+        unset($module_info);
+        $module = FALSE;
+      }
+      else {
+        if (isset($module_info['file'])) {
+          $path = !empty($module_info['path']) ? $module_info['path'] : drupal_get_path('module', $module);
+          require_once($path .'/'. $module_info['file']);
+        }
+        if (!isset($module_info['fields']) || $module_info['fields']) {
+          $fields = variable_get('realname_fields', array());
+          // Are there any fields assigned yet?
+          if (!$fields) {
+            // No, so just return the name.
+            return $account->name;
+          }
+          $pattern_saved = variable_get('realname_pattern', ' ');
+        }
+        else {
+          $fields = FALSE;
+        }
+        $homepage = variable_get('realname_homepage', '');
+        $use_theme = variable_get('realname_theme', TRUE);
+        if (isset($module_info['type']) && $module_info['type']) {
+          $type = variable_get('realname_profile_type', NULL);
+        }
+        else {
+          $type = FALSE;
+        }
+        $profile_privacy = module_exists('profile_privacy');
+      }
     }
   }
-  $pattern = $pattern_saved;
 
-  // Has the module been set up yet?
-  if ($fields) {
+  if (!$module) {
+    drupal_set_message(t('No module is available for RealName.'), 'error');
+    $string = $account->name;
+  }
+  else if (is_array($fields) && empty($fields)) {
+    $string = $account->name;
+  }
+  else if ($fields === FALSE) {
+    $string = module_invoke($module, 'realname_make', $account);
+  }
+  else if ($fields) {
+    $pattern = $pattern_saved;
+
     // Has the profile been loaded?
     if (!isset($account->{key($fields)})) {
       $load_func = $module . '_load_profile';
@@ -832,12 +910,13 @@ function _realname_make_name(&$account) {
     }
 
     $string = trim(strtr($pattern, $stuff));
-    $users[$account->uid] = $string;
   }
-  else {
+
+  if (empty($string)) {
     $string = $account->name;
   }
 
+
   // Removes double spaces in case they are generated by patterns with empty
   // fields. See http://drupal.org/node/977430
   $string = preg_replace('/ {2,}/', ' ', $string);
diff --git a/realname_content_profile.inc b/realname_content_profile.inc
index 5bd02e4..8944880 100644
--- a/realname_content_profile.inc
+++ b/realname_content_profile.inc
@@ -5,6 +5,19 @@
  */
 
 /**
+ * Implementation of hook_realname().
+ */
+function content_profile_realname() {
+  return array(
+    'name'   => 'Content Profile',
+    'types'  => TRUE,
+    'fields' => TRUE,
+    'file'   => 'realname_content_profile.inc',
+    'path'   => drupal_get_path('module', 'realname'),
+  );
+}
+
+/**
  * Implementation of hook_profile_load();
  */
 function content_profile_load_profile(&$account, $type = NULL) {
@@ -44,11 +57,11 @@ function content_profile_load_profile(&$account, $type = NULL) {
 //  $account->title = $profile->title; // http://drupal.org/node/606364
 }
 
-function realname_content_profile_get_types() {
+function content_profile_realname_get_types() {
   return content_profile_get_types('names');
 }
 
-function realname_content_profile_get_fields($current, $type) {
+function content_profile_realname_get_fields($current, $type) {
   $fields = $links = array();
   $all_fields = content_fields(NULL, $type);
   if ($all_fields) {
diff --git a/realname_profile.inc b/realname_profile.inc
index 44a0556..a0167ed 100644
--- a/realname_profile.inc
+++ b/realname_profile.inc
@@ -4,7 +4,20 @@
  * Realname module support for Profile (core) module.
  */
 
-function realname_profile_get_fields($current) {
+/**
+ * Implementation of hook_realname().
+ */
+function profile_realname() {
+  return array(
+    'name'   => 'Core Profile',
+    'types'  => FALSE,
+    'fields' => TRUE,
+    'file'   => 'realname_profile.inc',
+    'path'   => drupal_get_path('module', 'realname'),
+  );
+}
+
+function profile_realname_get_fields($current) {
   $fields = $links = array();
   $result = db_query("SELECT name, type, title FROM {profile_fields}");
   while ($field = db_fetch_array($result)) {
@@ -12,7 +25,7 @@ function realname_profile_get_fields($current) {
       case 'selection':
       case 'textfield':
         $name = $field['name'];
-        $selected = array_key_exists($name, $current);
+        $selected = array_key_exists($name, (array) $current);
         $fields[$name] = array(
           'title' => $field['title'],
           'weight' => $selected ? $current[$name] : 0,
diff --git a/realname_supported.inc b/realname_supported.inc
deleted file mode 100644
index 735a6cf..0000000
--- a/realname_supported.inc
+++ /dev/null
@@ -1,19 +0,0 @@
-<?php
-/**
- * @file
- * Realname module support list.
- */
-
-function realname_supported_modules() {
-  $list = array(
-    'content_profile' => array(
-      'name' => 'Content Profile',
-      'types' => TRUE,
-      ),
-    'profile' => array(
-      'name' => 'Core Profile',
-      'types' => FALSE,
-      ),
-    );
-  return $list;
-}
